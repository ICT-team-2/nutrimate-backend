<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nutrimate.nutrimatebackend.mapper.test.DietSportRecordMapper">

	<!-- 음식 목록 가져오기 -->
    <select id="selectFoodList" resultType="String">
        SELECT food_name FROM food
        <!-- 검색 추가시 사용 -->
        <!-- WHERE food_name LIKE '김%'; -->
    </select>

    <!-- 자신이 먹은 음식 기록하기 (식단DB 데이터 사용) -->
    <insert id="logEatenFood" parameterType="int">
        INSERT INTO record VALUES (SEQ_RECORD.NEXTVAL, #{userId}, SYSDATE, DEFAULT); <!-- 기록 공통 -->
        INSERT INTO dietrecord VALUES (SEQ_DIETRECORD.NEXTVAL,
            (SELECT record_id FROM record WHERE user_id=#{userId}),
            (SELECT FOOD_ID FROM food WHERE FOOD_NAME=#{foodName})
        );
    </insert>

    <!-- 자신이 먹은 음식 기록하기 (유저가 직접 입력) -->
    <insert id="logCustomFood" parameterType="Map">
        INSERT INTO record VALUES (SEQ_RECORD.NEXTVAL, #{userId}, SYSDATE, DEFAULT); <!-- 기록 공통 -->
        INSERT INTO food (food_id, food_name, food_cal) VALUES (
            (SELECT COUNT(*)+1 FROM food),
            #{foodName},
            #{calories}
        );
        INSERT INTO customfood VALUES (
            (SELECT FOOD_ID FROM FOOD WHERE FOOD_NAME=#{foodName}),
            #{userId},
            SYSDATE
        );
        INSERT INTO dietrecord VALUES (SEQ_DIETRECORD.NEXTVAL,
            (SELECT MAX(record_id) FROM record),
            (SELECT food_id FROM food WHERE food_name=#{foodName})
        );
    </insert>
    
    <!-- 먹은 칼로리와 일일 권장 칼로리 열람하기 -->
    <!-- (운동 정도에 따라 권장 칼로리를 바꿀 수 있도록) -->
    <select id="viewCaloriesConsumed" resultType="Integer">
        <!-- 오늘 먹은 칼로리 -->
        SELECT sum(food_cal) FROM food
        WHERE food_id = (
            SELECT food_id 
            FROM dietrecord
            WHERE record_id=(
                SELECT record_id FROM record
                WHERE user_id=#{userId}
                AND TRUNC(do_date) = TO_DATE(SYSDATE)
            )
        );
        <!-- 일일 권장 칼로리 -->
        SELECT user_cal FROM member
        WHERE user_id=#{userId};
    </select>
    
    
    <!-- 운동 목록 가져오기 -->
    <select id="getSportList" resultType="String">
        SELECT sporrt_name FROM sport
        <!-- 검색 추가시 사용 -->
        <!-- WHERE sporrt_name LIKE '바%'; -->
    </select>
    
    <!-- 운동으로 소모한 칼로리를 기록하는 쿼리문 (운동DB 데이터 사용) -->
    <insert id="logExerciseWithDBData" parameterType="int">
		INSERT INTO record VALUES (SEQ_RECORD.NEXTVAL, #{userId}, SYSDATE, DEFAULT); <!-- 기록 공통 -->
		INSERT INTO sportrecord VALUES (SEQ_SPORTRECORD.NEXTVAL,
		    (SELECT record_id FROM record WHERE user_id=#{userId}),
		    (SELECT sport_id FROM sport WHERE sporrt_name=#{sportName}),
		    (SELECT sport_met FROM sport WHERE sporrt_name=#{sportName}) * (1 / 60) * #{exerciseTime} * (SELECT user_weight FROM member WHERE user_id=#{userId}),
		    #{exerciseTime},
		    (SELECT user_weight FROM member WHERE user_id=#{userId})
		);
    </insert>
    
    <!-- 운동으로 소모한 칼로리를 기록하는 쿼리문 (유저가 직접 입력) -->
    <insert id="logCustomExercise" parameterType="Map">
            INSERT INTO record VALUES (SEQ_RECORD.NEXTVAL, #{userId}, SYSDATE, DEFAULT); <!-- 기록 공통 -->
            INSERT INTO sport VALUES (
                (SELECT COUNT(*) + 1 FROM sport),
                #{sportName},
                (#{calories} * 60) / (SELECT user_weight FROM member WHERE user_id = #{userId}) * #{exerciseTime}
            );
            INSERT INTO customsport VALUES (
                (SELECT sport_id FROM sport WHERE sporrt_name=#{sportName}),
                #{userId},
                SYSDATE
            );
            INSERT INTO sportrecord VALUES (SEQ_SPORTRECORD.NEXTVAL,
                (SELECT MAX(record_id) FROM record),
                (SELECT sport_id FROM sport WHERE sporrt_name=#{sportName}),
                #{calories},
                #{exerciseTime},
                (SELECT user_weight FROM member WHERE user_id=#{userId})
            );
    </insert>

    <!-- 오늘 자신이 소모한 칼로리를 열람하는 쿼리문 -->
    <select id="viewConsumedCalories" resultType="Integer">
        SELECT SUM(sport_cal) FROM sportrecord
        WHERE record_id=(
            SELECT record_id FROM record
            WHERE user_id=#{userId}
            AND TRUNC(do_date)=TO_DATE(SYSDATE)
        );
    </select>
    
</mapper>