<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nutrimate.nutrimatebackend.mapper.board.CommentMapper">
    
    <!-- ResultMap 정의 -->
    <resultMap id="CommentDto"
               type="com.nutrimate.nutrimatebackend.model.board.CommentDto">
        <id column="cmt_id" property="cmtId"/>
        <result column="board_id" property="boardId"/>
        <result column="user_id" property="userId"/>
        <result column="cmt_content" property="cmtContent"/>
        <result column="created_date" property="createdDate"/>
        <result column="cmt_depth" property="cmtDepth"/>
        <result column="deleted" property="deleted"/>
        <result column="cmt_ref" property="cmtRef"/>
        <result column="user_name" property="userName"/>
        <result column="user_nick" property="userNick"/>
        <result column="user_profile" property="userProfile"/>
    </resultMap>
    <update id="deleteAllRepliesAndComment">
        UPDATE comments
        SET deleted = 'Y', all_deleted = 'Y'
            WHERE cmt_id IN
                  (SELECT cmt_id
                       FROM comments
                       START WITH cmt_id = #{cmtId}
                       CONNECT BY PRIOR cmt_id = cmt_ref)
    </update>
    
    <!-- 글번호에 따른 댓글+대댓글 목록 조회 -->
    <select id="findCommentsByBoardId" resultMap="CommentDto">
        SELECT c.*, m.user_name, m.user_nick, m.user_profile
            FROM comments c
                     JOIN member m
                          ON c.user_id = m.user_id
            WHERE board_id = #{boardId}
              AND all_deleted = 'N'
            START WITH cmt_depth = 0
            CONNECT BY PRIOR cmt_id = cmt_ref
            ORDER SIBLINGS BY c.created_date
    </select>
    <!-- 대댓글을 가져오는 도우미 메소드 -->
    <select id="findRepliesByParentId" resultType="CommentDto">
        SELECT c.*, m.user_name, m.user_nick
            FROM comments c
                     JOIN member m ON c.user_id = m.user_id
            WHERE cmt_ref = #{parentCommentId}
    </select>
    
    <!-- 대댓글 수 확인 -->
    <select id="countReplies" resultType="int">
        SELECT count(*)
            FROM comments
            START WITH cmt_id = #{cmtId}
            CONNECT BY PRIOR cmt_id = cmt_ref
            ORDER SIBLINGS BY created_date DESC
    </select>
    
    <select id="findCountRepliesByCmtId" resultType="int">
        SELECT count(*)
            FROM comments
            WHERE deleted = 'N'
            START WITH cmt_id = #{cmtId}
            CONNECT BY PRIOR cmt_id = cmt_ref
            ORDER SIBLINGS BY created_date DESC
    </select>
    <select id="findCountDeletedRepliesByCommentId"
            parameterType="CommentDto"
            resultType="java.lang.Integer">
        SELECT count(*)
            FROM comments
            WHERE deleted = 'Y'
            START WITH cmt_id = #{cmtId}
            CONNECT BY PRIOR cmt_id = cmt_ref
            ORDER SIBLINGS BY created_date DESC
    </select>
    <select id="findCmtRefByCmtId" resultType="java.lang.Integer">
        SELECT cmt_ref
            FROM comments
            WHERE cmt_id = #{cmtId}
    </select>
    
    <!-- 댓글 작성 -->
    <insert id="insertComment" parameterType="CommentDto">
        <selectKey keyProperty="cmtId" resultType="int" order="BEFORE">
            SELECT SEQ_COMMENTS.NEXTVAL AS cmtId
                FROM DUAL
        </selectKey>
        INSERT INTO comments (cmt_id, user_id, board_id, cmt_content, created_date, deleted,
        blocked, cmt_depth, cmt_ref)
        VALUES (#{cmtId}, #{userId}, #{boardId}, #{cmtContent}, sysdate, DEFAULT, DEFAULT, DEFAULT,
        DEFAULT)
    </insert>
    
    <!-- 대댓글 작성 -->
    <insert id="insertReply" parameterType="CommentDto">
        <selectKey keyProperty="mycmtId" resultType="int" order="BEFORE">
            SELECT SEQ_COMMENTS.NEXTVAL AS cmtId
                FROM DUAL
        </selectKey>
        INSERT INTO comments (cmt_id, user_id, board_id, cmt_content, created_date, deleted,
        blocked, cmt_depth, cmt_ref)
        VALUES (#{mycmtId}, #{userId}, #{boardId}, #{cmtContent}, sysdate, DEFAULT, DEFAULT,
        (SELECT cmt_depth FROM comments WHERE cmt_id = #{cmtId})+1, #{cmtId})
    </insert>
    
    <!-- 댓글/대댓글 수정 -->
    <update id="updateComment" parameterType="CommentDto">
        UPDATE comments
        SET cmt_content = #{cmtContent}
            WHERE cmt_id = #{cmtId}
    </update>
    
    <!-- 댓글/대댓글 삭제 -->
    <update id="deleteComment" parameterType="CommentDto">
        UPDATE comments
        SET deleted = 'Y', all_deleted = 'Y'
            WHERE cmt_id = #{cmtId}
    </update>
    <update id="updateToNoCommentIfGetReplies" parameterType="CommentDto">
        UPDATE comments
        SET deleted = 'Y'
            WHERE cmt_id = #{cmtId}
    </update>
    <update id="updateAllDeletedWhenReplyDeleted">
        UPDATE comments
        SET all_deleted = 'Y'
            WHERE cmt_id IN (SELECT cmt_id
                                 FROM comments
                                 START WITH cmt_id = #{cmtId}
                                 CONNECT BY PRIOR cmt_ref = cmt_id)
              AND deleted = 'Y'
    </update>


</mapper>