<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nutrimate.nutrimatebackend.mapper.record.RecordAnalysisMapper">
    <select id="findRecordAnalysis" resultType="RecordAnalysisDto">
        WITH f2 AS (SELECT f.*,
        dr.record_intake,
        dr.diet_id,
        r.*,
        coalesce((record_intake / food_intake),1) AS serving
        FROM food f
        JOIN dietrecord dr ON f.food_id = dr.food_id
        JOIN record r ON dr.record_id = r.record_id
        WHERE r.user_id = #{userId}
        AND r.deleted = 'N'
        ),
        f3 as (SELECT f2.food_id,
        f2.food_name,
        f2.food_group,
        (food_cal * serving) AS food_cal,
        (food_protein * serving) AS food_protein,
        (food_provi * serving) AS food_provi,
        (food_carbo * serving) AS food_carbo,
        (food_chole * serving) AS food_chole,
        (food_salt * serving) AS food_salt,
        record_intake,
        diet_id,
        record_id,
        user_id,
        do_date,
        serving
        FROM f2
        ORDER BY f2.diet_id),
        d1 AS (SELECT m.user_cal AS recommend_cal,
        sum(food_cal)
        OVER (PARTITION BY f3.user_id,trunc(do_date)) AS total_diet_cal, --total_cal
        sum(food_carbo)
        OVER (PARTITION BY f3.user_id,trunc(do_date)) AS total_carbo, --total_carbohydrate
        sum(food_protein)
        OVER (PARTITION BY f3.user_id,trunc(do_date)) AS total_protein, --total_protein
        sum(food_provi)
        OVER (PARTITION BY f3.user_id,trunc(do_date)) AS total_provi, --total_fat
        trunc(do_date) AS do_date,
        f3.user_id AS user_id
        FROM f3
        join member m ON f3.user_id = m.user_id
        WHERE f3.user_id = #{userId}
        ORDER BY f3.record_id DESC),
        d2 AS (SELECT DISTINCT *
        FROM d1),
        n1 AS (SELECT DISTINCT *
        FROM nutriratio nr
        WHERE user_id = #{userId}),
        n2 AS (SELECT d2.*, n1.carbo, n1.protein, n1.province,
        (carbo + protein + province) AS total_ratio
        FROM d2
        JOIN n1 ON d2.user_id = n1.user_id),
        n3 AS (SELECT n2.*,
        recommend_cal * carbo / total_ratio / 4.0 AS recommend_carbo,
        recommend_cal * protein / total_ratio / 4.0 AS recommend_protein,
        recommend_cal * province / total_ratio / 9.0 AS recommend_provi
        FROM n2),
        s1 AS (SELECT DISTINCT r.user_id,
        sum(sr.sport_time)
        OVER (PARTITION BY r.user_id,trunc(do_date)) AS total_sport_time,
        sum(sr.sport_cal)
        OVER (PARTITION BY r.user_id,trunc(do_date)) AS total_sport_cal,
        trunc(do_date) AS do_date
        FROM sport s
        JOIN sportrecord sr ON s.sport_id = sr.sport_id
        JOIN record r ON sr.record_id = r.record_id
        where r.deleted = 'N'
        )
        <choose>
            <when test="doDate != null">
                ,recommend as (SELECT n3.recommend_cal, n3.recommend_carbo,
                n3.recommend_protein, n3.recommend_provi,
                n3.user_id
                FROM n3
                JOIN s1 ON n3.user_id = s1.user_id)
                SELECT DISTINCT r.*,
                coalesce(s1.total_sport_time, 0) AS total_sport_time,
                coalesce(s1.total_sport_cal,0) AS total_sport_cal,
                coalesce(n3.total_diet_cal, 0) AS total_diet_cal,
                coalesce(n3.total_carbo, 0) AS total_carbo,
                coalesce(n3.total_protein, 0) AS total_protein,
                coalesce(n3.total_provi, 0) AS total_provi,
                coalesce(n3.total_ratio, 0) AS total_ratio,
                #{doDate} as do_date
                FROM recommend r left join n3 on r.user_id = n3.user_id
                and n3.do_date = #{doDate}
                left join s1 on r.user_id = s1.user_id
                and s1.do_date = #{doDate}
            </when>
            <when test="period != null">
                , total as (
                <foreach collection="period" item="item" separator="UNION">
                    SELECT #{userId} AS user_id,
                           coalesce(sum(total_diet_cal), 0) AS total_diet_cal,
                           coalesce(sum(total_carbo), 0) AS total_carbo,
                           coalesce(sum(total_protein), 0) AS total_protein,
                           coalesce(sum(total_provi), 0) AS total_provi,
                           coalesce(sum(total_sport_time), 0) AS total_sport_time,
                           coalesce(sum(total_sport_cal), 0) AS total_sport_cal,
                           #{item.startDate} AS start_date,
                           #{item.endDate} AS end_date
                        FROM n3
                                 JOIN s1 ON n3.user_id = s1.user_id
                                AND trunc(n3.do_date) BETWEEN to_date(#{item.startDate}) AND
                                                to_date(#{item.endDate})
                                AND trunc(s1.do_date) BETWEEN to_date(#{item.startDate}) AND
                                                to_date(#{item.endDate})
                </foreach>
                )
                select DISTINCT n3.recommend_cal, n3.recommend_carbo,
                n3.recommend_protein, n3.recommend_provi,
                t.*
                from total t
                join n3 on t.user_id = n3.user_id
                join s1 on t.user_id = s1.user_id
                order by end_date
            </when>
            <otherwise>
                SELECT DISTINCT *
                FROM n3
                JOIN s1 ON n3.user_id = s1.user_id
            </otherwise>
        </choose>
    </select>
    
    
    <select id="findRecordAnalysisForGraph"
            resultType="RecordAnalysisDto">
        WITH f2 AS (SELECT f.*,
        dr.record_intake,
        dr.diet_id,
        r.*,
        coalesce((record_intake / food_intake), 1) AS serving
        FROM food f
        JOIN dietrecord dr ON f.food_id = dr.food_id
        JOIN record r ON dr.record_id = r.record_id
        WHERE r.user_id = #{userId}
        AND r.deleted = 'N'),
        f3 AS (SELECT f2.food_id,
        f2.food_name,
        f2.food_group,
        (food_cal * serving) AS food_cal,
        (food_protein * serving) AS food_protein,
        (food_provi * serving) AS food_provi,
        (food_carbo * serving) AS food_carbo,
        (food_chole * serving) AS food_chole,
        (food_salt * serving) AS food_salt,
        record_intake,
        diet_id,
        record_id,
        user_id,
        do_date,
        serving
        FROM f2
        ORDER BY f2.diet_id),
        d1 AS (SELECT m.user_cal AS recommend_cal,
        sum(food_cal)
        OVER (PARTITION BY f3.user_id,trunc(do_date)) AS total_diet_cal, --total_cal
        sum(food_carbo)
        OVER (PARTITION BY f3.user_id,trunc(do_date)) AS total_carbo, --total_carbohydrate
        sum(food_protein)
        OVER (PARTITION BY f3.user_id,trunc(do_date)) AS total_protein, --total_protein
        sum(food_provi)
        OVER (PARTITION BY f3.user_id,trunc(do_date)) AS total_provi, --total_fat
        trunc(do_date) AS do_date,
        f3.user_id AS user_id
        FROM f3
        JOIN member m ON f3.user_id = m.user_id
        WHERE f3.user_id = #{userId}
        ORDER BY f3.record_id DESC),
        d2 AS (SELECT DISTINCT *
        FROM d1),
        n1 AS (SELECT DISTINCT *
        FROM nutriratio nr
        WHERE user_id = #{userId}),
        n2 AS (SELECT d2.*, n1.carbo, n1.protein, n1.province,
        (carbo + protein + province) AS total_ratio
        FROM d2
        JOIN n1 ON d2.user_id = n1.user_id),
        n3 AS (SELECT n2.*,
        recommend_cal * carbo / total_ratio / 4.0 AS recommend_carbo,
        recommend_cal * protein / total_ratio / 4.0 AS recommend_protein,
        recommend_cal * province / total_ratio / 9.0 AS recommend_provi
        FROM n2),
        total_diet AS (
        <foreach collection="period" item="item" separator="UNION">
            SELECT #{userId} AS user_id,
                   coalesce(sum(total_diet_cal), 0) AS total_diet_cal,
                   coalesce(sum(total_carbo), 0) AS total_carbo,
                   coalesce(sum(total_protein), 0) AS total_protein,
                   coalesce(sum(total_provi), 0) AS total_provi,
                   #{item.startDate} AS start_date,
                   #{item.endDate} AS end_date
                FROM n3
                WHERE trunc(n3.do_date) BETWEEN to_date(#{item.startDate}) AND
                          to_date(#{item.endDate})
        </foreach>
        ),
        td2 AS (SELECT DISTINCT n3.recommend_cal, n3.recommend_carbo,
        n3.recommend_protein, n3.recommend_provi,
        td.*
        FROM total_diet td
        JOIN n3 ON td.user_id = n3.user_id
        ORDER BY end_date),
        s1 AS (SELECT DISTINCT r.user_id,
        sum(sr.sport_time)
        OVER (PARTITION BY r.user_id,trunc(do_date)) AS total_sport_time,
        sum(sr.sport_cal)
        OVER (PARTITION BY r.user_id,trunc(do_date)) AS total_sport_cal,
        trunc(do_date) AS do_date
        FROM sport s
        JOIN sportrecord sr ON s.sport_id = sr.sport_id
        JOIN record r ON sr.record_id = r.record_id
        WHERE r.deleted = 'N')
        ,
        total_sport AS (
        <foreach collection="period" item="item" separator="UNION">
            SELECT #{userId} AS user_id,
                   coalesce(sum(total_sport_time), 0) AS total_sport_time,
                   coalesce(sum(total_sport_cal), 0) AS total_sport_cal,
                   #{item.startDate} AS start_date,
                   #{item.endDate} AS end_date
                FROM s1
                WHERE trunc(s1.do_date) BETWEEN to_date(#{item.startDate}) AND
                          to_date(#{item.endDate})
        </foreach>
        ),
        ts2 AS (SELECT DISTINCT ts.*
        FROM total_sport ts
        JOIN s1 ON ts.user_id = s1.user_id
        ORDER BY end_date)
        SELECT td2.*, ts2.total_sport_time, ts2.total_sport_cal,
        ts2.start_date AS ts_start_date, ts2.end_date AS ts_end_date
        FROM td2
        JOIN ts2 ON td2.end_date = ts2.end_date
        ORDER BY td2.end_date
    </select>
    <select id="findDefaultRecordAnalysis"
            resultType="RecordAnalysisDto">
        WITH n1 AS (SELECT DISTINCT *
                        FROM nutriratio nr
                        WHERE user_id = #{userId}),
             n2 AS (SELECT m.user_cal AS recommend_cal, n1.carbo, n1.protein, n1.province,
                           (carbo + protein + province) AS total_ratio
                        FROM member m
                                 JOIN n1 ON m.user_id = n1.user_id),
             n3 AS (SELECT n2.*,
                           recommend_cal * carbo / total_ratio / 4.0 AS recommend_carbo,
                           recommend_cal * protein / total_ratio / 4.0 AS recommend_protein,
                           recommend_cal * province / total_ratio / 9.0 AS recommend_provi
                        FROM n2)
        SELECT n3.*,
               0 AS total_sport_time,
               0 AS total_sport_cal,
               0 AS total_diet_cal,
               0 AS total_carbo,
               0 AS total_protein,
               0 AS total_provi,
               #{doDate} AS do_date
            FROM n3
    </select>
</mapper>